# Libs
import discord # For discord
from discord.ext import commands # For discord
import logging # For logging
from pathlib import Path # For paths
import platform
import json

cwd = Path(__file__).parents[0]
cwd = str(cwd)
print(f"{cwd}\n-----")

# Defining a few things
fichierSecret = json.load(open(cwd+'/Config/secrets.json'))
fichierConfig = json.load(open(cwd+'/Config/config.json'))
fichierStat = json.load(open(cwd+'/stat.json'))
bot = commands.Bot(command_prefix='-', case_insensitive=True, owner_id=fichierConfig['owner']['ID'])
logging.basicConfig(level=logging.INFO)

@bot.event
async def on_ready():
    # Another way to use variables in strings
    print("\n\nBot:\n\tNom:\t{}\n\tID:\t{}".format(bot.user.name, bot.user.id))
    print("\nProprio :\n\tNom:\t{}\n\tID:\t{}".format(fichierConfig['owner']['name'], fichierConfig['owner']['ID']))
    await bot.change_presence(activity=discord.Game(name=f"-help")) # This changes the bots 'activity'
    print("\n-----------/Log\-----------\n")

@bot.command(name='ping', aliases=['pong'])
async def _hi(ctx):
    """
    A simple command which says hi to the author.
    """
    await ctx.send(f"POING, {ctx.author.mention}!")
    print("{} a utilisé la commande ping".format(ctx.author.name))
    # Another way to do this code is (user object).mention
    #await ctx.send(f"Hi <@{ctx.author.id}>!")

@bot.command()
async def stats(ctx):
    fichierStat['pythonVersion'] = platform.python_version()
    fichierStat['dPyVersion'] = discord.__version__
    fichierStat['serverCount'] = len(bot.guilds)
    fichierStat['memberCount'] = len(set(bot.get_all_members()))
    str_response = json.dumps(fichierStat, indent=4, ensure_ascii=False, sort_keys=True)
    print(str_response)
    
@bot.command(aliases=['disconnect'])
@commands.is_owner()
async def logout(ctx):
    await ctx.send(f"Bon et bah salut du coup o/")
    await bot.logout()

@logout.error
async def logout_error(ctx, error):
    if isinstance(error, commands.CheckFailure):
        await ctx.send("Tu n'as pas les Permission pour stopper ce bot")
    else:
        raise error

@bot.command()
async def echo(ctx, *, message=None):
    """
    A simple command that repeats the users input back to them.
    """
    message = message or "Please provide the message to be repeated."
    await ctx.message.delete()
    await ctx.send(message)

bot.run(fichierSecret['token']) # Runs our bot